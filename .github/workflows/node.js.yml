# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:   
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}        
    - name: Print new build number
      run: |
        echo "Build number is $BUILD_NUMBER"
        Build_Number=$BUILD_NUMBER
    - uses: actions/checkout@v2
    - name: first check
      run: |
        echo "value is $Build_Number"
        echo "value is ${{ env.Build_Number }}"
        echo "value is ${{ steps.vars.outputs.docker_tag }}"
        ls
        pwd
        cat values.yaml
    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "image"
        replace: "world"
        include: "**values.yaml"
    - name: final check
      run: |
        ls
        pwd
        cat values.yaml
        
    - name: Checkout Project rebob
      uses: actions/checkout@master
      with: 
         repository: VkasSharma/repob
         token: ${{ secrets.ACTIONS_TOKEN }}
         path: ./repob
    - name: check repob content
      run: |
        cat ./repob/file
        ls ./repob
    - name: Find and Replace
      run: |
        pre_build_number=$((${BUILD_NUMBER}-1))
        echo $pre_build_number
        word1="harbor.example.com/nsp_redis-exporter:${pre_build_number}"
        word2="harbor.example.com/nsp_redis-exporter:${BUILD_NUMBER}"
        echo $word1
        echo $word2
        cat ./repob/file
        sed -i 's|'"$word1"'|'"$word2"'|g' ./repob/file
        cat ./repob/file
    - name: check repob content
      run: |
        echo "value is $Build_Number"
        echo "Build number is $BUILD_NUMBER"
        ls
        cat ./repob/file
    - name: Change tag in helm cchart
      run: |
        cd ./repob
        git add .
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -am "Image tag modify after pushing to harbor"
        git push
